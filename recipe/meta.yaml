{% set name = "verde" %}
{% set version = "1.6.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: f82a149a3a13ccd60227840cdc9d93a23b8faeb44308d7c447554bd0452698cb

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv

requirements:
  host:
    - python >=3.6
    - pip
    - setuptools_scm
  run:
    - python >=3.6
    - numpy
    - scipy
    - pandas
    - xarray
    - scikit-learn
    - pooch >=0.7.0
    - dask

test:
  requires:
    - pytest
    - pyproj
  imports:
    - verde
  commands:
    - pytest --pyargs verde.tests.test_minimal

about:
  home: http://github.com/fatiando/verde
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: Processing and gridding spatial data using Green's functions
  description: |
    Verde is a Python library for processing spatial data (bathymetry, geophysics
    surveys, etc) and interpolating it on regular grids (i.e., *gridding*).
    Most gridding methods in Verde use a Green's functions approach.
    A linear model is estimated based on the input data and then used to predict
    data on a regular grid (or in a scatter, a profile, as derivatives).
    The models are Green's functions from (mostly) elastic deformation theory.
    This approach is very similar to *machine learning* so we implement gridder
    classes that are similar to scikit-learn regression classes.
    The API is not 100% compatible but it should look familiar to those with some
    scikit-learn experience.
  doc_url: https://www.fatiando.org/verde
  dev_url: https://github.com/fatiando/verde

extra:
  recipe-maintainers:
    - leouieda
